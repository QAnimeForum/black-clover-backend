import { EquipmentEntity } from 'src/modules/items/entity/equipment.entity';
import { Markup } from 'telegraf';
import { ENUM_ACTION_NAMES } from '../constants/action-names.constant';
import { InventoryEntity } from 'src/modules/items/entity/inventory.entity';
import { BotContext } from '../interfaces/bot.context';
import { EQUIPMENT_BUTTON, RESOURCES_BUTTON, INVENTORY_BUTTON, BACK_BUTTON } from '../constants/button-names.constant';
import { INVENTORY_IMAGE_PATH } from '../constants/images';

export const equipmentToText = (
    equipmentEntity: EquipmentEntity,
    username: string
) => {
    let caption = '';
    const owner = `<strong>–í–ª–∞–¥–µ–ª–µ—Ü</strong>: @${username}\n\n`;
    caption += owner;
    const title = '<strong><u>–ù–∞–¥–µ—Ç–∞—è —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∞</u></strong>\n\n';
    caption += title;

    const headdressBlock = `üé© –ì–æ–ª–æ–≤–Ω–æ–π —É–±–æ—Ä: ${equipmentEntity?.cap ? equipmentEntity.cap.name : '-'}\n`;
    caption += headdressBlock;
    const armorBlock = `üéΩ –î–æ—Å–ø–µ—Ö: ${equipmentEntity?.armor ? equipmentEntity.armor.name : '-'}\n`;
    caption += armorBlock;
    const cloakBlock = `üß• –ü–ª–∞—â: ${equipmentEntity?.cloak ? equipmentEntity.cloak.name : '-'}\n`;
    caption += cloakBlock;
    const leftHandBlock = `ü§õüèº –õ–µ–≤–∞—è —Ä—É–∫–∞:${equipmentEntity?.gloves ? equipmentEntity.gloves.name : '-'}\n`;
    caption += leftHandBlock;
    const rightHandBlock = `ü§úüèº –ü—Ä–∞–≤–∞—è —Ä—É–∫–∞:${equipmentEntity?.gloves ? equipmentEntity.gloves.name : '-'}\n`;
    caption += rightHandBlock;
    const glovesBlock = `üß§ –ü–µ—Ä—á–∞—Ç–∫–∏:${equipmentEntity?.gloves ? equipmentEntity.gloves.name : '-'}\n`;
    caption += glovesBlock;
    const shoesBlock = `ü•æ–û–±—É–≤—å:${equipmentEntity?.shoes ? equipmentEntity.shoes.name : '-'}\n`;
    caption += shoesBlock;
    const ringBlock = `üíç –ö–æ–ª—å—Ü–æ:${equipmentEntity?.ring ? equipmentEntity.ring.name : '-'}\n`;
    caption += ringBlock;
    const vehicleBlock = `üßπ –°—Ä–µ–¥—Å—Ç–≤–æ –ø–µ—Ä–µ–¥–µ–¥–≤–∏–∂–µ–Ω–∏—è:${equipmentEntity?.vehicle ? equipmentEntity.vehicle.name : '-'}\n`;
    caption += vehicleBlock;
    /*  const helmetBlock = `ü™ñ –®–ª–µ–º: ${equipmentEntity?.helmet ? equipmentEntity.helmet.name : '-'}\n`;
    caption += helmetBlock;
    const weaponBlock = `üî™ –û—Ä—É–∂–∏–µ: ${equipmentEntity?.weapon ? equipmentEntity.weapon.name : '-'}\n`;
    caption += weaponBlock;
    const armorBlock = `üéΩ –î–æ—Å–ø–µ—Ö: ${equipmentEntity?.armor ? equipmentEntity.armor.name : '-'}\n`;
    caption += armorBlock;
    const cloakBlock = `üß• –ü–ª–∞—â: ${equipmentEntity?.cloak ? equipmentEntity.cloak.name : '-'}\n`;
    caption += cloakBlock;
    const neckBlock = `üìø –ê–∫–∫—Å–µ—Å—É–∞—Ä—ã –Ω–∞ —à–µ–µ: ${equipmentEntity?.neck ? equipmentEntity.neck.name : '-'}\n`;
    caption += neckBlock;

    const shieldBlock = `üõ° –®–∏—Ç:${equipmentEntity?.shield ? equipmentEntity.shield.name : '-'}\n`;
    caption += shieldBlock;

   *
    *  const helmetBlock = `ü™ñ –®–ª–µ–º: ${equipmentEntity?.helmet ? equipmentEntity.helmet.name : '-'}\n`;
    caption += helmetBlock;
    const weaponBlock = `üî™ –û—Ä—É–∂–∏–µ: ${equipmentEntity?.weapon ? equipmentEntity.weapon.name : '-'}\n`;
    caption += weaponBlock;
    const armorBlock = `üéΩ –î–æ—Å–ø–µ—Ö: ${equipmentEntity?.armor ? equipmentEntity.armor.name : '-'}\n`;
    caption += armorBlock;
    const cloakBlock = `üß• –ü–ª–∞—â: ${equipmentEntity?.cloak ? equipmentEntity.cloak.name : '-'}\n`;
    caption += cloakBlock;
    const neckBlock = `üìø –ê–∫–∫—Å–µ—Å—É–∞—Ä—ã –Ω–∞ —à–µ–µ: ${equipmentEntity?.neck ? equipmentEntity.neck.name : '-'}\n`;
    caption += neckBlock;
    const capBlock = `üé© –®–ª—è–ø–∞: ${equipmentEntity?.cap ? equipmentEntity.cap.name : '-'}\n`;
    caption += capBlock;
    const faceBlock = `üßë‚Äçü¶±–ú–∞—Å–∫–∏/–ü–∏—Ä—Å–∏–Ω–≥: ${equipmentEntity?.face ? equipmentEntity.face.name : '-'}\n`;
    caption += faceBlock;
    const earBlock = `ü¶ª–ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã/—É–∫—Ä–∞—à–µ–Ω–∏—è –≤ —É—à–∞—Ö: ${equipmentEntity?.face ? equipmentEntity.ear.name : '-'}\n`;
    caption += earBlock;
    const eyeBlock = `üëÅ –ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –¥–ª—è –≥–ª–∞–∑: ${equipmentEntity?.face ? equipmentEntity.eye.name : '-'}\n`;
    caption += eyeBlock;
    const clothesBlock = `üß• –û–¥–µ–∂–¥–∞:${equipmentEntity?.clothes ? equipmentEntity.clothes.name : '-'}\n`;
    caption += clothesBlock;

    const pantsBlock = `ü¶µ –ë—Ä—é–∫–∏:${equipmentEntity?.pants ? equipmentEntity.pants.name : '-'}\n`;
    caption += pantsBlock;

    const shoesBlock = `ü•æ –°–∞–ø–æ–≥–∏:${equipmentEntity?.shoes ? equipmentEntity.shoes.name : '-'}\n`;
    caption += shoesBlock;

    const glovesBlock = `üß§ –ü–µ—Ä—á–∞—Ç–∫–∏:${equipmentEntity?.gloves ? equipmentEntity.gloves.name : '-'}\n`;
    caption += glovesBlock;

    const shieldBlock = `üõ° –®–∏—Ç:${equipmentEntity?.shield ? equipmentEntity.shield.name : '-'}\n`;
    caption += shieldBlock;

    const ringBlock = `üíç –ö–æ–ª—å—Ü–æ:${equipmentEntity?.ring ? equipmentEntity.ring.name : '-'}\n`;
    caption += ringBlock;

    const vehicleBlock = `üßπ –°—Ä–µ–¥—Å—Ç–≤–æ –ø–µ—Ä–µ–¥–µ–¥–≤–∏–∂–µ–Ω–∏—è:${equipmentEntity?.vehicle ? equipmentEntity.vehicle.name : '-'}\n`;
    caption += vehicleBlock;
    */
    return caption;
};

export const equipmentInlineKeyBoard = () => {
    const buttons = [];

    buttons.push([
        Markup.button.callback(
            'üé© –ì–æ–ª–æ–≤–Ω–æ–π —É–±–æ—Ä',
            ENUM_ACTION_NAMES.CHANGE_CAP
        ),
        Markup.button.callback('üéΩ –î–æ—Å–ø–µ—Ö', ENUM_ACTION_NAMES.CHANGE_ARMOR),
    ]);
    buttons.push([
        Markup.button.callback(
            'ü§õüèº –õ–µ–≤–∞—è —Ä—É–∫–∞',
            ENUM_ACTION_NAMES.CHANGE_LEFT_HAND
        ),
        Markup.button.callback(
            'ü§úüèº –ü—Ä–∞–≤–∞—è —Ä—É–∫–∞',
            ENUM_ACTION_NAMES.CHANGE_RIGHT_HAND
        ),
    ]);

    buttons.push([
        Markup.button.callback(
            'üß• –ü–ª–∞—â',
            ENUM_ACTION_NAMES.CHANGE_CLOAK_ACTION
        ),
        Markup.button.callback(
            'üß§ –ü–µ—Ä—á–∞—Ç–∫–∏',
            ENUM_ACTION_NAMES.CHANGE_GLOVES_ACTION
        ),
    ]);
    buttons.push([
        Markup.button.callback(
            'ü•æ  –°–∞–ø–æ–≥–∏',
            ENUM_ACTION_NAMES.CHANGE_SHOES_ACTION
        ),
        Markup.button.callback(
            'üíç –ö–æ–ª—å—Ü–æ',
            ENUM_ACTION_NAMES.CHANGE_RING_ACTION
        ),
    ]);
    buttons.push([
        Markup.button.callback(
            'üßπ –°—Ä–µ–¥—Å—Ç–≤–æ –ø–µ—Ä–µ–¥–µ–¥–≤–∏–∂–µ–Ω–∏—è',
            ENUM_ACTION_NAMES.CHANGE_VEHICLE_ACTION
        ),
    ]);
    return buttons;
};

export const showInvnentoryStatistics = async (
    ctx: BotContext,
    inventory: InventoryEntity
) => {
    const chatType = ctx.chat.type;
    let caption = '<strong><u>–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å</u></strong>\n\n';
    caption += `<strong>–î–µ–º–æ–Ω–∏—á–µ—Å–∫–∏–µ –æ—Å–∫–æ–ª–∫–∏</strong>: ${inventory.devilFragments}\n`;
    if (chatType == 'private') {
        await ctx.sendPhoto(
            {
                source: INVENTORY_IMAGE_PATH,
            },
            {
                caption,
                parse_mode: 'HTML',
                ...Markup.keyboard([
                    [EQUIPMENT_BUTTON, RESOURCES_BUTTON],
                    [INVENTORY_BUTTON, BACK_BUTTON],
                ]).resize(),
            }
        );
    } else {
        await ctx.sendPhoto(
            {
                source: INVENTORY_IMAGE_PATH,
            },
            {
                caption,
                parse_mode: 'HTML',
                ...Markup.inlineKeyboard(equipmentInlineKeyBoard()),
            }
        );
    }
};
